LP 						::= RelativeLP	| AbsoluteLP
AbsoluteLP 				::= '/' RelativeLP ? 
							| '//' RelativeLP

RelativeLP 				::= Step RLPopt
RLPopt					::= '/' Step RelativeLP
							| '//' Step RelativeLP
Step					::= QName* Predicate?
							| '*'
							| @ QName*
							| .
							| ..
QName					::= [a-z]*
Predicate				::= '[' Expr ']'

Expr					::= Method Invocation 
							| EqualsExpr ExprOpt
 							
ExprOpt					::= '==' EqualsExpr ExprOpt
							| '!=' EqualsExpr ExprOpt
							
EqualsExpr				::= RelExpr EqExprOpt

EqExprOpt				::= '<' RelExpr EqualsExpr 
							| '>' RelExpr EqualsExpr
RelExpr					::= <digit> | <literal>
Method Invocation		::= '#' QName

 							
 							
Example:
	/company//vendor/contact